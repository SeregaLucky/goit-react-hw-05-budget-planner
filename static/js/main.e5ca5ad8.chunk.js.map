{"version":3,"sources":["redux/planner/plannerReducer.js","redux/planner/plannerTypes.js","redux/rootReducer.js","redux/store.js","redux/planner/plannerSelectors.js","components/shared/Form.js","components/shared/Label.js","components/shared/Input.js","components/shared/Button.js","components/BudgetForm.js","components/ExpenseForm.js","components/ExpensesTable.js","components/Stat.js","components/Values.js","components/App.js","redux/planner/plannerActions.js","index.js"],"names":["combineReducers","budget","state","type","payload","value","expenses","expense","filter","id","planner","plannerReducers","store","createStore","rootReducer","getbudget","getExpenses","calculateTotalExpenses","createSelector","reduce","total","amount","calculateBalance","totalExpenses","StyledForm","styled","form","Form","onSubmit","children","StyledLabel","label","props","customStyles","Label","StyledInput","input","Input","onChange","name","defaultProps","StyledButton","button","Button","onClick","BudgetForm","handleChange","e","setState","target","handleSubmit","preventDefault","onSave","this","Component","ExpenseForm","Table","table","ExpensesTable","items","onRemove","map","key","Container","div","isPositive","p","Value","Stat","section","Values","balance","connect","selectors","dispatch","saveBudget","AC","addExpense","shortid","generate","Number","removeExpense","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e5ca5ad8.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\r\nimport * as types from './plannerTypes';\r\n\r\nconst budgetReducer = (state = 0, { type, payload }) => {\r\n  switch (type) {\r\n    case types.SAVE_BUDGET:\r\n      return payload.value;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst expensesReducer = (state = [], { type, payload }) => {\r\n  switch (type) {\r\n    case types.ADD_EXPENSE:\r\n      return [payload.expense, ...state];\r\n\r\n    case types.REMOVE_EXPENSE:\r\n      return state.filter(expense => expense.id !== payload.id);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  budget: budgetReducer,\r\n  expenses: expensesReducer,\r\n});\r\n","export const SAVE_BUDGET = 'SAVE_BUDGET';\r\nexport const ADD_EXPENSE = 'ADD_EXPENSE';\r\nexport const REMOVE_EXPENSE = 'REMOVE_EXPENSE';\r\n","import { combineReducers } from 'redux';\r\nimport plannerReducers from './planner/plannerReducer';\r\n\r\nexport default combineReducers({\r\n  planner: plannerReducers,\r\n});\r\n","import { createStore } from 'redux';\r\n\r\nimport rootReducer from './rootReducer';\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;\r\n","import { createSelector } from 'reselect';\r\n\r\nconst getbudget = state => state.planner.budget;\r\nconst getExpenses = state => state.planner.expenses;\r\n\r\nconst calculateTotalExpenses = createSelector([getExpenses], expenses =>\r\n  expenses.reduce((total, expense) => total + expense.amount, 0),\r\n);\r\n\r\nconst calculateBalance = createSelector(\r\n  [getbudget, calculateTotalExpenses],\r\n  (budget, totalExpenses) => budget - totalExpenses,\r\n);\r\n\r\nexport default {\r\n  getbudget,\r\n  getExpenses,\r\n  calculateTotalExpenses,\r\n  calculateBalance,\r\n};\r\n","/* import - node_modules */\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport T from 'prop-types';\r\n\r\nconst StyledForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 16px;\r\n  width: 100%;\r\n  border-radius: 2px;\r\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n`;\r\n\r\n/*\r\n * COMPONENT\r\n */\r\nconst Form = ({ onSubmit = () => null, children }) => (\r\n  <StyledForm onSubmit={onSubmit}>{children}</StyledForm>\r\n);\r\n\r\nForm.propTypes = {\r\n  onSubmit: T.func.isRequired,\r\n  children: T.node.isRequired,\r\n};\r\n\r\nexport default Form;\r\n","/* import - node_modules */\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport T from 'prop-types';\r\n\r\nconst StyledLabel = styled.label`\r\n  display: inline-block;\r\n  font-size: 20px;\r\n  color: #171718;\r\n  cursor: pointer;\r\n  ${props => props.customStyles}\r\n`;\r\n\r\n/*\r\n * COMPONENT\r\n */\r\nconst Label = ({ children, customStyles }) => (\r\n  <StyledLabel customStyles={customStyles}>{children}</StyledLabel>\r\n);\r\n\r\nLabel.propTypes = {\r\n  children: T.node.isRequired,\r\n  customStyles: T.string.isRequired,\r\n};\r\n\r\nexport default Label;\r\n","/* import - node_modules */\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport T from 'prop-types';\r\n\r\nconst StyledInput = styled.input`\r\n  color: #171718;\r\n  font: inherit;\r\n  font-size: 1.2rem;\r\n  padding: 16px;\r\n  border-radius: 4px;\r\n  border: 1px solid #bdbdbd;\r\n  width: 100%;\r\n  outline: 0;\r\n\r\n  &:focus {\r\n    border: 1px solid #2b32b2;\r\n  }\r\n`;\r\n\r\n/*\r\n * COMPONENT\r\n */\r\nconst Input = ({\r\n  type = ' text',\r\n  value = '',\r\n  onChange = () => null,\r\n  name = '',\r\n}) => <StyledInput type={type} value={value} onChange={onChange} name={name} />;\r\n\r\nInput.defaultProps = {\r\n  value: null,\r\n  name: '',\r\n};\r\n\r\nInput.propTypes = {\r\n  type: T.string.isRequired,\r\n  value: T.oneOfType([T.string, T.number]),\r\n  onChange: T.func.isRequired,\r\n  name: T.string,\r\n};\r\n\r\nexport default Input;\r\n","/* import - node_modules */\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport T from 'prop-types';\r\n\r\nconst StyledButton = styled.button`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #fff;\r\n  background-color: #3f51b5;\r\n  border: 0;\r\n  outline: 0;\r\n  padding: 8px 24px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.05);\r\n  font: inherit;\r\n  text-transform: uppercase;\r\n  user-select: none;\r\n\r\n  transition: background-color 200ms ease-in-out;\r\n\r\n  &:hover {\r\n    box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.15);\r\n    background-color: #303f9f;\r\n  }\r\n`;\r\n\r\n/*\r\n * COMPONENT\r\n */\r\nconst Button = ({ type = 'button', label = '', onClick = () => null }) => (\r\n  <StyledButton type={type} onClick={onClick}>\r\n    {label}\r\n  </StyledButton>\r\n);\r\n\r\nButton.defaultProps = {\r\n  type: null,\r\n  label: '',\r\n  onClick: null,\r\n};\r\n\r\nButton.propTypes = {\r\n  type: T.string,\r\n  label: T.string,\r\n  onClick: T.func,\r\n};\r\n\r\nexport default Button;\r\n","/* import - node_modules */\r\nimport React, { Component } from 'react';\r\nimport T from 'prop-types';\r\n/* import - COMPONENT */\r\nimport Form from './shared/Form';\r\nimport Label from './shared/Label';\r\nimport Input from './shared/Input';\r\nimport Button from './shared/Button';\r\n\r\nconst labelStyles = `\r\n  margin-bottom: 16px;  \r\n`;\r\n\r\n/*\r\n * COMPONENT\r\n */\r\nexport default class BudgetForm extends Component {\r\n  static propTypes = {\r\n    onSave: T.func.isRequired,\r\n  };\r\n\r\n  state = { budget: 0 };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      budget: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { onSave } = this.props;\r\n\r\n    onSave(this.state.budget);\r\n\r\n    this.setState({ budget: 0 });\r\n  };\r\n\r\n  render() {\r\n    const { budget } = this.state;\r\n\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <Label customStyles={labelStyles}>\r\n          Enter your total budget\r\n          <Input type=\"number\" value={budget} onChange={this.handleChange} />\r\n        </Label>\r\n\r\n        <Button label=\"Save\" type=\"submit\" />\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n","/* import - node_modules */\r\nimport React, { Component } from 'react';\r\nimport T from 'prop-types';\r\n/* import - COMPONENT */\r\nimport Form from './shared/Form';\r\nimport Label from './shared/Label';\r\nimport Input from './shared/Input';\r\nimport Button from './shared/Button';\r\n\r\nconst labelStyles = `\r\n  margin-bottom: 16px;  \r\n`;\r\n\r\n/*\r\n * COMPONENT\r\n */\r\nexport default class ExpenseForm extends Component {\r\n  static propTypes = {\r\n    onSave: T.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    amount: 0,\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { onSave } = this.props;\r\n\r\n    onSave({\r\n      ...this.state,\r\n    });\r\n\r\n    this.setState({ name: '', amount: 0 });\r\n  };\r\n\r\n  render() {\r\n    const { name, amount } = this.state;\r\n\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <Label customStyles={labelStyles}>\r\n          Enter expense name\r\n          <Input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </Label>\r\n        <Label customStyles={labelStyles}>\r\n          Enter expense amount\r\n          <Input\r\n            type=\"number\"\r\n            name=\"amount\"\r\n            value={amount}\r\n            onChange={this.handleChange}\r\n          />\r\n        </Label>\r\n\r\n        <Button label=\"Add\" type=\"submit\" />\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n","/* import - node_modules */\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport T from 'prop-types';\r\n/* import - COMPONENT */\r\nimport Button from './shared/Button';\r\n\r\nconst Table = styled.table`\r\n  border-collapse: collapse;\r\n  text-align: center;\r\n  width: 100%;\r\n\r\n  tr {\r\n    border-bottom: 1px solid #212121;\r\n  }\r\n\r\n  td,\r\n  th {\r\n    padding-top: 8px;\r\n    padding-bottom: 8px;\r\n  }\r\n`;\r\n\r\n/*\r\n * COMPONENT\r\n */\r\nconst ExpensesTable = ({ items = [], onRemove }) => (\r\n  <Table>\r\n    <thead>\r\n      <tr>\r\n        <th>Expense name</th>\r\n        <th>Expense amount</th>\r\n        <th />\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {items.map(({ id, name, amount }) => (\r\n        <tr key={id}>\r\n          <td>{name}</td>\r\n          <td>{amount}</td>\r\n          <td>\r\n            <Button label=\"Delete\" onClick={() => onRemove(id)} />\r\n          </td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </Table>\r\n);\r\n\r\nExpensesTable.propTypes = {\r\n  items: T.arrayOf(\r\n    T.shape({\r\n      id: T.string,\r\n      name: T.string,\r\n      amount: T.number,\r\n    }),\r\n  ).isRequired,\r\n\r\n  onRemove: T.func.isRequired,\r\n};\r\n\r\nexport default ExpensesTable;\r\n","/* import - node_modules */\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport T from 'prop-types';\r\n\r\nconst Container = styled.div`\r\n  text-align: center;\r\n  padding: 8px 24px;\r\n  color: ${props => (props.isPositive ? '#388E3C' : '#D32F2F')};\r\n  user-select: none;\r\n`;\r\n\r\nconst Label = styled.p`\r\n  margin-top: 0;\r\n  margin-bottom: 8px;\r\n  text-transform: uppercase;\r\n  font-weight: 500;\r\n  font-size: 24px;\r\n`;\r\n\r\nconst Value = styled.p`\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  font-size: 48px;\r\n`;\r\n\r\n/*\r\n * COMPONENT\r\n */\r\nconst Stat = ({ label, value, isPositive }) => (\r\n  <Container isPositive={isPositive}>\r\n    <Label>{label}</Label>\r\n    <Value>{value}&nbsp;&#x24;</Value>\r\n  </Container>\r\n);\r\n\r\nStat.defaultProps = {\r\n  isPositive: null,\r\n};\r\n\r\nStat.propTypes = {\r\n  label: T.string.isRequired,\r\n  value: T.oneOfType([T.string, T.number]).isRequired,\r\n  isPositive: T.bool,\r\n};\r\n\r\nexport default Stat;\r\n","/* import - node_modules */\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport T from 'prop-types';\r\n/* import - COMPONENT */\r\nimport Stat from './Stat';\r\n\r\nconst Container = styled.section`\r\n  display: inline-flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\n/*\r\n * COMPONENT\r\n */\r\nconst Values = ({ budget, expenses, balance }) => (\r\n  <Container>\r\n    <Stat label=\"Budget\" value={budget} isPositive />\r\n    <Stat label=\"Expenses\" value={expenses} />\r\n    <Stat label=\"Balance\" value={balance} isPositive={balance >= 0} />\r\n  </Container>\r\n);\r\n\r\nValues.propTypes = {\r\n  budget: T.oneOfType([T.number, T.string]).isRequired,\r\n  expenses: T.number.isRequired,\r\n  balance: T.number.isRequired,\r\n};\r\n\r\nexport default Values;\r\n","/* import - node_modules */\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport T from 'prop-types';\r\n/* import - CSS */\r\nimport '../App.css';\r\n/* import - selectors */\r\nimport selectors from '../redux/planner/plannerSelectors';\r\n/* import - action creator */\r\nimport * as AC from '../redux/planner/plannerActions';\r\n/* import - COMPONENT */\r\nimport BudgetForm from './BudgetForm';\r\nimport ExpenseForm from './ExpenseForm';\r\nimport ExpensesTable from './ExpensesTable';\r\nimport Values from './Values';\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 340px 1fr;\r\n  align-items: flex-start;\r\n  grid-gap: 24px;\r\n  max-width: 960px;\r\n  padding-left: 16px;\r\n  padding-right: 16px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n\r\n/*\r\n * COMPONENT\r\n */\r\nconst App = ({\r\n  expenses,\r\n  budget,\r\n  totalExpenses,\r\n  balance,\r\n  saveBudget,\r\n  addExpense,\r\n  removeExpense,\r\n}) => {\r\n  return (\r\n    <Container>\r\n      <BudgetForm onSave={saveBudget} />\r\n      <Values budget={budget} expenses={totalExpenses} balance={balance} />\r\n      <ExpenseForm onSave={addExpense} />\r\n      {expenses.length > 0 && (\r\n        <ExpensesTable items={expenses} onRemove={removeExpense} />\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nApp.propTypes = {\r\n  expenses: T.arrayOf(T.shape).isRequired,\r\n  budget: T.oneOfType([T.number, T.string]).isRequired,\r\n  totalExpenses: T.number.isRequired,\r\n  balance: T.number.isRequired,\r\n\r\n  saveBudget: T.func.isRequired,\r\n  addExpense: T.func.isRequired,\r\n  removeExpense: T.func.isRequired,\r\n};\r\n\r\n/*\r\n * CONNECT\r\n */\r\nconst mapStateToProps = state => ({\r\n  expenses: selectors.getExpenses(state),\r\n  budget: selectors.getbudget(state),\r\n  totalExpenses: selectors.calculateTotalExpenses(state),\r\n  balance: selectors.calculateBalance(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  saveBudget: value => dispatch(AC.saveBudgetAC(value)),\r\n  addExpense: (name, amount) => dispatch(AC.addExpenseAC(name, amount)),\r\n  removeExpense: id => dispatch(AC.removeExpenseAC(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import shortid from 'shortid';\r\nimport * as types from './plannerTypes';\r\n\r\nexport const saveBudgetAC = value => ({\r\n  type: types.SAVE_BUDGET,\r\n\r\n  payload: {\r\n    value,\r\n  },\r\n});\r\n\r\nexport const addExpenseAC = ({ name, amount }) => ({\r\n  type: types.ADD_EXPENSE,\r\n\r\n  payload: {\r\n    expense: {\r\n      id: shortid.generate(),\r\n      name,\r\n      amount: Number(amount),\r\n    },\r\n  },\r\n});\r\n\r\nexport const removeExpenseAC = id => ({\r\n  type: types.REMOVE_EXPENSE,\r\n\r\n  payload: {\r\n    id,\r\n  },\r\n});\r\n","/* import - node_modules */\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n/* import - CSS */\r\nimport './index.css';\r\n/* import - store */\r\nimport store from './redux/store';\r\n/* import - COMPONENT */\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}