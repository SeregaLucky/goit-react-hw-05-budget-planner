{"version":3,"sources":["redux/planner/plannerReducer.js","redux/planner/plannerTypes.js","redux/rootReducer.js","redux/store.js","redux/planner/plannerActions.js","components/shared/Form.js","components/shared/Label.js","components/shared/Input.js","components/shared/Button.js","components/BudgetForm.js","redux/planner/plannerSelectors.js","components/Stat.js","components/Values.js","components/ExpenseForm.js","components/ExpensesTable.js","components/App.js","index.js"],"names":["budgetReducer","createReducer","state","payload","value","expensesReducer","expense","filter","id","combineReducers","budget","expenses","planner","plannerReducers","store","configureStore","reducer","rootReducer","saveBudgetAC","createAction","addExpenseAC","removeExpenseAC","StyledForm","styled","form","Form","onSubmit","children","StyledLabel","label","props","customStyles","Label","StyledInput","input","Input","type","onChange","name","defaultProps","StyledButton","button","Button","onClick","BudgetForm","handleChange","e","setState","target","handleSubmit","preventDefault","onSave","this","Component","connect","dispatch","AC","getbudget","getExpenses","calculateTotalExpenses","createSelector","reduce","total","amount","calculateBalance","totalExpenses","Container","div","isPositive","p","Value","Stat","section","selectors","balance","ExpenseForm","shortid","generate","Number","Table","table","items","onRemove","length","map","key","App","ReactDOM","render","document","getElementById"],"mappings":"iUAeMA,EAAgBC,YAAc,EAAD,eCfR,eDgBJ,SAACC,EAAD,YAAUC,QAAsBC,UAiBjDC,EAAkBJ,YAAc,IAAD,mBChCV,eDiCJ,SAACC,EAAD,YAAUC,QAAuBG,SAAjC,mBAA6CJ,OAD/B,cC/BP,kBDkCJ,SAACA,EAAD,OAAUC,EAAV,EAAUA,QAAV,OACtBD,EAAMK,QAAO,SAAAD,GAAO,OAAIA,EAAQE,KAAOL,EAAQK,SAJd,IAOtBC,4BAAgB,CAC7BC,OAAQV,EACRW,SAAUN,IEvCGI,4BAAgB,CAC7BG,QAASC,ICOIC,EAJDC,YAAe,CAC3BC,QAASC,I,+ECKEC,EAAeC,YHbD,eG2BdC,EAAeD,YH1BD,eGoCdE,EAAkBF,YHnCD,kB,gTIG9B,IAAMG,EAAaC,IAAOC,KAAV,KAsBDC,EATF,SAAC,GAAD,QAAGC,gBAAH,MAAc,kBAAM,MAApB,EAA0BC,EAA1B,EAA0BA,SAA1B,OACX,kBAACL,EAAD,CAAYI,SAAUA,GAAWC,I,mKCdnC,IAAMC,EAAcL,IAAOM,MAAV,KAKb,SAAAC,GAAK,OAAIA,EAAMC,gBAeJC,EATD,SAAC,GAAD,IAAGL,EAAH,EAAGA,SAAUI,EAAb,EAAaA,aAAb,OACZ,kBAACH,EAAD,CAAaG,aAAcA,GAAeJ,I,4RCZ5C,IAAMM,EAAcV,IAAOW,MAAV,KAkBXC,EAAQ,SAAC,GAAD,QACZC,YADY,MACL,QADK,MAEZhC,aAFY,MAEJ,GAFI,MAGZiC,gBAHY,MAGD,kBAAM,MAHL,MAIZC,YAJY,MAIL,GAJK,SAKR,kBAACL,EAAD,CAAaG,KAAMA,EAAMhC,MAAOA,EAAOiC,SAAUA,EAAUC,KAAMA,KAEvEH,EAAMI,aAAe,CACnBnC,MAAO,KACPkC,KAAM,IAUOH,Q,yjBCrCf,IAAMK,EAAejB,IAAOkB,OAAV,KA2BZC,EAAS,SAAC,GAAD,QAAGN,YAAH,MAAU,SAAV,MAAoBP,aAApB,MAA4B,GAA5B,MAAgCc,eAAhC,MAA0C,kBAAM,MAAhD,SACb,kBAACH,EAAD,CAAcJ,KAAMA,EAAMO,QAASA,GAChCd,IAILa,EAAOH,aAAe,CACpBH,KAAM,KACNP,MAAO,GACPc,QAAS,MASID,QC/BTE,E,2MAKJ1C,MAAQ,CAAEQ,OAAQ,G,EAElBmC,aAAe,SAAAC,GACb,EAAKC,SAAS,CACZrC,OAAQoC,EAAEE,OAAO5C,S,EAIrB6C,aAAe,SAAAH,GACbA,EAAEI,kBAIFC,EAFmB,EAAKrB,MAAhBqB,QAED,EAAKjD,MAAMQ,QAElB,EAAKqC,SAAS,CAAErC,OAAQ,K,wEAGhB,IACAA,EAAW0C,KAAKlD,MAAhBQ,OAER,OACE,kBAAC,EAAD,CAAMgB,SAAU0B,KAAKH,cACnB,kBAAC,EAAD,CAAOlB,aAnCE,gCAmCT,0BAEE,kBAAC,EAAD,CAAOK,KAAK,SAAShC,MAAOM,EAAQ2B,SAAUe,KAAKP,gBAGrD,kBAAC,EAAD,CAAQhB,MAAM,OAAOO,KAAK,gB,GAjCTiB,aA8CVC,cAAQ,MAJI,SAAAC,GAAQ,MAAK,CACtCJ,OAAQ,SAAA/C,GAAK,OAAImD,EAASC,EAAgB,CAAEpD,eAG/BkD,CAAkCV,G,QC/D3Ca,EAAY,SAAAvD,GAAK,OAAIA,EAAMU,QAAQF,QACnCgD,EAAc,SAAAxD,GAAK,OAAIA,EAAMU,QAAQD,UAErCgD,EAAyBC,YAAe,CAACF,IAAc,SAAA/C,GAAQ,OACnEA,EAASkD,QAAO,SAACC,EAAOxD,GAAR,OAAoBwD,EAAQxD,EAAQyD,SAAQ,MAQ/C,GACbN,YACAC,cACAC,yBACAK,iBATuBJ,YACvB,CAACH,EAAWE,IACZ,SAACjD,EAAQuD,GAAT,OAA2BvD,EAASuD,M,kdCNtC,IAAMC,GAAY3C,IAAO4C,IAAV,KAGJ,SAAArC,GAAK,OAAKA,EAAMsC,WAAa,UAAY,aAI9CpC,GAAQT,IAAO8C,EAAV,KAQLC,GAAQ/C,IAAO8C,EAAV,KASLE,GAAO,SAAC,GAAD,IAAG1C,EAAH,EAAGA,MAAOzB,EAAV,EAAUA,MAAOgE,EAAjB,EAAiBA,WAAjB,OACX,kBAACF,GAAD,CAAWE,WAAYA,GACrB,kBAAC,GAAD,KAAQvC,GACR,kBAACyC,GAAD,KAAQlE,EAAR,WAIJmE,GAAKhC,aAAe,CAClB6B,WAAY,MASCG,U,6JCpCf,IAAML,GAAY3C,IAAOiD,QAAV,MAgCAlB,gBANS,SAAApD,GAAK,MAAK,CAChCS,SAAU8D,EAAUd,uBAAuBzD,GAC3CQ,OAAQ+D,EAAUhB,UAAUvD,GAC5BwE,QAASD,EAAUT,iBAAiB9D,MAGvBoD,EAvBA,SAAC,GAAD,IAAG5C,EAAH,EAAGA,OAAQC,EAAX,EAAWA,SAAU+D,EAArB,EAAqBA,QAArB,OACb,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAM7C,MAAM,SAASzB,MAAOM,EAAQ0D,YAAU,IAC9C,kBAAC,GAAD,CAAMvC,MAAM,WAAWzB,MAAOO,IAC9B,kBAAC,GAAD,CAAMkB,MAAM,UAAUzB,MAAOsE,EAASN,WAAYM,GAAW,Q,+NCVjE,IAOMC,G,2MAKJzE,MAAQ,CACNoC,KAAM,GACNyB,OAAQ,G,EAGVlB,aAAe,SAAAC,GACb,EAAKC,SAAL,eACGD,EAAEE,OAAOV,KAAOQ,EAAEE,OAAO5C,S,EAI9B6C,aAAe,SAAAH,GACbA,EAAEI,kBAIFC,EAFmB,EAAKrB,MAAhBqB,Q,2VAED,CAAD,GACD,EAAKjD,QAGV,EAAK6C,SAAS,CAAET,KAAM,GAAIyB,OAAQ,K,wEAG1B,IAAD,EACkBX,KAAKlD,MAAtBoC,EADD,EACCA,KAAMyB,EADP,EACOA,OAEd,OACE,kBAAC,EAAD,CAAMrC,SAAU0B,KAAKH,cACnB,kBAAC,EAAD,CAAOlB,aAxCE,gCAwCT,qBAEE,kBAAC,EAAD,CACEK,KAAK,OACLE,KAAK,OACLlC,MAAOkC,EACPD,SAAUe,KAAKP,gBAGnB,kBAAC,EAAD,CAAOd,aAjDE,gCAiDT,uBAEE,kBAAC,EAAD,CACEK,KAAK,SACLE,KAAK,SACLlC,MAAO2D,EACP1B,SAAUe,KAAKP,gBAInB,kBAAC,EAAD,CAAQhB,MAAM,MAAMO,KAAK,gB,GApDPiB,aAsEXC,eAAQ,MATI,SAAAC,GAAQ,MAAK,CACtCJ,OAAQ,gBAAGb,EAAH,EAAGA,KAAMyB,EAAT,EAASA,OAAT,OACNR,EACEC,EAAgB,CACdlD,QAAS,CAAEE,GAAIoE,IAAQC,WAAYvC,OAAMyB,OAAQe,OAAOf,WAKjDT,CAAkCqB,I,2QC9EjD,IAAMI,GAAQxD,IAAOyD,MAAV,MAiEI1B,gBAPS,SAAApD,GAAK,MAAK,CAChC+E,MAAOR,EAAUf,YAAYxD,OAEJ,SAAAqD,GAAQ,MAAK,CACtC2B,SAAU,SAAA1E,GAAE,OAAI+C,EAASC,EAAmB,CAAEhD,YAGjC8C,EA9CO,SAAC,GAAD,QAAG2B,aAAH,MAAW,GAAX,EAAeC,EAAf,EAAeA,SAAf,OACpBD,EAAME,OAAS,GACb,kBAACJ,GAAD,KACE,+BACE,4BACE,4CACA,8CACA,+BAGJ,+BACGE,EAAMG,KAAI,gBAAG5E,EAAH,EAAGA,GAAI8B,EAAP,EAAOA,KAAMyB,EAAb,EAAaA,OAAb,OACT,wBAAIsB,IAAK7E,GACP,4BAAK8B,GACL,4BAAKyB,GACL,4BACE,kBAAC,EAAD,CAAQlC,MAAM,SAASc,QAAS,kBAAMuC,EAAS1E,gB,gSCpC7D,IAAM0D,GAAY3C,IAAO4C,IAAV,MAwBAmB,GATH,kBACV,kBAAC,GAAD,KACE,kBAAC,EAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,QCpBJC,IAASC,OACP,kBAAC,IAAD,CAAU1E,MAAOA,GACf,kBAAC,GAAD,OAEF2E,SAASC,eAAe,W","file":"static/js/main.5af6ac58.chunk.js","sourcesContent":["/* eslint-disable */\r\nimport { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport * as types from './plannerTypes';\r\n\r\n// const budgetReducer = (state = 0, { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.SAVE_BUDGET:\r\n//       return payload.value;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nconst budgetReducer = createReducer(0, {\r\n  [types.SAVE_BUDGET]: (state, { payload }) => payload.value,\r\n});\r\n\r\n// const expensesReducer = (state = [], { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.ADD_EXPENSE:\r\n//       console.log(payload);\r\n//       return [payload.expense, ...state];\r\n\r\n//     case types.REMOVE_EXPENSE:\r\n//       return state.filter(expense => expense.id !== payload.id);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nconst expensesReducer = createReducer([], {\r\n  [types.ADD_EXPENSE]: (state, { payload }) => [payload.expense, ...state],\r\n\r\n  [types.REMOVE_EXPENSE]: (state, { payload }) =>\r\n    state.filter(expense => expense.id !== payload.id),\r\n});\r\n\r\nexport default combineReducers({\r\n  budget: budgetReducer,\r\n  expenses: expensesReducer,\r\n});\r\n","export const SAVE_BUDGET = 'SAVE_BUDGET';\r\nexport const ADD_EXPENSE = 'ADD_EXPENSE';\r\nexport const REMOVE_EXPENSE = 'REMOVE_EXPENSE';\r\n","import { combineReducers } from 'redux';\r\nimport plannerReducers from './planner/plannerReducer';\r\n\r\nexport default combineReducers({\r\n  planner: plannerReducers,\r\n});\r\n","// import { createStore } from 'redux';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport rootReducer from './rootReducer';\r\n\r\n// const store = createStore(rootReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\n\r\nexport default store;\r\n","/* eslint-disable */\r\nimport { createAction } from '@reduxjs/toolkit';\r\nimport shortid from 'shortid';\r\nimport * as types from './plannerTypes';\r\n\r\n// export const saveBudgetAC = value => ({\r\n//   type: types.SAVE_BUDGET,\r\n\r\n//   payload: {\r\n//     value,\r\n//   },\r\n// });\r\n\r\nexport const saveBudgetAC = createAction(types.SAVE_BUDGET);\r\n\r\n// export const addExpenseAC = ({ name, amount }) => ({\r\n//   type: types.ADD_EXPENSE,\r\n\r\n//   payload: {\r\n//     expense: {\r\n//       id: shortid.generate(),\r\n//       name,\r\n//       amount: Number(amount),\r\n//     },\r\n//   },\r\n// });\r\n\r\nexport const addExpenseAC = createAction(types.ADD_EXPENSE);\r\n\r\n// export const removeExpenseAC = id => ({\r\n//   type: types.REMOVE_EXPENSE,\r\n\r\n//   payload: {\r\n//     id,\r\n//   },\r\n// });\r\n\r\nexport const removeExpenseAC = createAction(types.REMOVE_EXPENSE);\r\n","/* import - node_modules */\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport T from 'prop-types';\r\n\r\nconst StyledForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 16px;\r\n  width: 100%;\r\n  border-radius: 2px;\r\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n`;\r\n\r\n/*\r\n * COMPONENT\r\n */\r\nconst Form = ({ onSubmit = () => null, children }) => (\r\n  <StyledForm onSubmit={onSubmit}>{children}</StyledForm>\r\n);\r\n\r\nForm.propTypes = {\r\n  onSubmit: T.func.isRequired,\r\n  children: T.node.isRequired,\r\n};\r\n\r\nexport default Form;\r\n","/* import - node_modules */\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport T from 'prop-types';\r\n\r\nconst StyledLabel = styled.label`\r\n  display: inline-block;\r\n  font-size: 20px;\r\n  color: #171718;\r\n  cursor: pointer;\r\n  ${props => props.customStyles}\r\n`;\r\n\r\n/*\r\n * COMPONENT\r\n */\r\nconst Label = ({ children, customStyles }) => (\r\n  <StyledLabel customStyles={customStyles}>{children}</StyledLabel>\r\n);\r\n\r\nLabel.propTypes = {\r\n  children: T.node.isRequired,\r\n  customStyles: T.string.isRequired,\r\n};\r\n\r\nexport default Label;\r\n","/* import - node_modules */\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport T from 'prop-types';\r\n\r\nconst StyledInput = styled.input`\r\n  color: #171718;\r\n  font: inherit;\r\n  font-size: 1.2rem;\r\n  padding: 16px;\r\n  border-radius: 4px;\r\n  border: 1px solid #bdbdbd;\r\n  width: 100%;\r\n  outline: 0;\r\n\r\n  &:focus {\r\n    border: 1px solid #2b32b2;\r\n  }\r\n`;\r\n\r\n/*\r\n * COMPONENT\r\n */\r\nconst Input = ({\r\n  type = ' text',\r\n  value = '',\r\n  onChange = () => null,\r\n  name = '',\r\n}) => <StyledInput type={type} value={value} onChange={onChange} name={name} />;\r\n\r\nInput.defaultProps = {\r\n  value: null,\r\n  name: '',\r\n};\r\n\r\nInput.propTypes = {\r\n  type: T.string.isRequired,\r\n  value: T.oneOfType([T.string, T.number]),\r\n  onChange: T.func.isRequired,\r\n  name: T.string,\r\n};\r\n\r\nexport default Input;\r\n","/* import - node_modules */\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport T from 'prop-types';\r\n\r\nconst StyledButton = styled.button`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #fff;\r\n  background-color: #3f51b5;\r\n  border: 0;\r\n  outline: 0;\r\n  padding: 8px 24px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.05);\r\n  font: inherit;\r\n  text-transform: uppercase;\r\n  user-select: none;\r\n\r\n  transition: background-color 200ms ease-in-out;\r\n\r\n  &:hover {\r\n    box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.15);\r\n    background-color: #303f9f;\r\n  }\r\n`;\r\n\r\n/*\r\n * COMPONENT\r\n */\r\nconst Button = ({ type = 'button', label = '', onClick = () => null }) => (\r\n  <StyledButton type={type} onClick={onClick}>\r\n    {label}\r\n  </StyledButton>\r\n);\r\n\r\nButton.defaultProps = {\r\n  type: null,\r\n  label: '',\r\n  onClick: null,\r\n};\r\n\r\nButton.propTypes = {\r\n  type: T.string,\r\n  label: T.string,\r\n  onClick: T.func,\r\n};\r\n\r\nexport default Button;\r\n","/* import - node_modules */\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport T from 'prop-types';\r\n/* import - action creator */\r\nimport * as AC from '../redux/planner/plannerActions';\r\n/* import - COMPONENT */\r\nimport Form from './shared/Form';\r\nimport Label from './shared/Label';\r\nimport Input from './shared/Input';\r\nimport Button from './shared/Button';\r\n\r\nconst labelStyles = `\r\n  margin-bottom: 16px;  \r\n`;\r\n\r\n/*\r\n * COMPONENT\r\n */\r\nclass BudgetForm extends Component {\r\n  static propTypes = {\r\n    onSave: T.func.isRequired,\r\n  };\r\n\r\n  state = { budget: 0 };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      budget: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { onSave } = this.props;\r\n\r\n    onSave(this.state.budget);\r\n\r\n    this.setState({ budget: 0 });\r\n  };\r\n\r\n  render() {\r\n    const { budget } = this.state;\r\n\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <Label customStyles={labelStyles}>\r\n          Enter your total budget\r\n          <Input type=\"number\" value={budget} onChange={this.handleChange} />\r\n        </Label>\r\n\r\n        <Button label=\"Save\" type=\"submit\" />\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\n/*\r\n * CONNECT\r\n */\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSave: value => dispatch(AC.saveBudgetAC({ value })),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(BudgetForm);\r\n","import { createSelector } from 'reselect';\r\n\r\nconst getbudget = state => state.planner.budget;\r\nconst getExpenses = state => state.planner.expenses;\r\n\r\nconst calculateTotalExpenses = createSelector([getExpenses], expenses =>\r\n  expenses.reduce((total, expense) => total + expense.amount, 0),\r\n);\r\n\r\nconst calculateBalance = createSelector(\r\n  [getbudget, calculateTotalExpenses],\r\n  (budget, totalExpenses) => budget - totalExpenses,\r\n);\r\n\r\nexport default {\r\n  getbudget,\r\n  getExpenses,\r\n  calculateTotalExpenses,\r\n  calculateBalance,\r\n};\r\n","/* import - node_modules */\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport T from 'prop-types';\r\n\r\nconst Container = styled.div`\r\n  text-align: center;\r\n  padding: 8px 24px;\r\n  color: ${props => (props.isPositive ? '#388E3C' : '#D32F2F')};\r\n  user-select: none;\r\n`;\r\n\r\nconst Label = styled.p`\r\n  margin-top: 0;\r\n  margin-bottom: 8px;\r\n  text-transform: uppercase;\r\n  font-weight: 500;\r\n  font-size: 24px;\r\n`;\r\n\r\nconst Value = styled.p`\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  font-size: 48px;\r\n`;\r\n\r\n/*\r\n * COMPONENT\r\n */\r\nconst Stat = ({ label, value, isPositive }) => (\r\n  <Container isPositive={isPositive}>\r\n    <Label>{label}</Label>\r\n    <Value>{value}&nbsp;&#x24;</Value>\r\n  </Container>\r\n);\r\n\r\nStat.defaultProps = {\r\n  isPositive: null,\r\n};\r\n\r\nStat.propTypes = {\r\n  label: T.string.isRequired,\r\n  value: T.oneOfType([T.string, T.number]).isRequired,\r\n  isPositive: T.bool,\r\n};\r\n\r\nexport default Stat;\r\n","/* import - node_modules */\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport T from 'prop-types';\r\n/* import - selectors */\r\nimport selectors from '../redux/planner/plannerSelectors';\r\n/* import - COMPONENT */\r\nimport Stat from './Stat';\r\n\r\nconst Container = styled.section`\r\n  display: inline-flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\n/*\r\n * COMPONENT\r\n */\r\nconst Values = ({ budget, expenses, balance }) => (\r\n  <Container>\r\n    <Stat label=\"Budget\" value={budget} isPositive />\r\n    <Stat label=\"Expenses\" value={expenses} />\r\n    <Stat label=\"Balance\" value={balance} isPositive={balance >= 0} />\r\n  </Container>\r\n);\r\n\r\nValues.propTypes = {\r\n  budget: T.oneOfType([T.number, T.string]).isRequired,\r\n  expenses: T.number.isRequired,\r\n  balance: T.number.isRequired,\r\n};\r\n\r\n/*\r\n * CONNECT\r\n */\r\nconst mapStateToProps = state => ({\r\n  expenses: selectors.calculateTotalExpenses(state),\r\n  budget: selectors.getbudget(state),\r\n  balance: selectors.calculateBalance(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Values);\r\n","/* import - node_modules */\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport T from 'prop-types';\r\nimport shortid from 'shortid';\r\n/* import - action creator */\r\nimport * as AC from '../redux/planner/plannerActions';\r\n/* import - COMPONENT */\r\nimport Form from './shared/Form';\r\nimport Label from './shared/Label';\r\nimport Input from './shared/Input';\r\nimport Button from './shared/Button';\r\n\r\nconst labelStyles = `\r\n  margin-bottom: 16px;  \r\n`;\r\n\r\n/*\r\n * COMPONENT\r\n */\r\nclass ExpenseForm extends Component {\r\n  static propTypes = {\r\n    onSave: T.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    amount: 0,\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { onSave } = this.props;\r\n\r\n    onSave({\r\n      ...this.state,\r\n    });\r\n\r\n    this.setState({ name: '', amount: 0 });\r\n  };\r\n\r\n  render() {\r\n    const { name, amount } = this.state;\r\n\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <Label customStyles={labelStyles}>\r\n          Enter expense name\r\n          <Input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </Label>\r\n        <Label customStyles={labelStyles}>\r\n          Enter expense amount\r\n          <Input\r\n            type=\"number\"\r\n            name=\"amount\"\r\n            value={amount}\r\n            onChange={this.handleChange}\r\n          />\r\n        </Label>\r\n\r\n        <Button label=\"Add\" type=\"submit\" />\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\n/*\r\n * CONNECT\r\n */\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSave: ({ name, amount }) =>\r\n    dispatch(\r\n      AC.addExpenseAC({\r\n        expense: { id: shortid.generate(), name, amount: Number(amount) },\r\n      }),\r\n    ),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ExpenseForm);\r\n","/* import - node_modules */\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport T from 'prop-types';\r\n/* import - selectors */\r\nimport selectors from '../redux/planner/plannerSelectors';\r\n/* import - action creator */\r\nimport * as AC from '../redux/planner/plannerActions';\r\n/* import - COMPONENT */\r\nimport Button from './shared/Button';\r\n\r\nconst Table = styled.table`\r\n  border-collapse: collapse;\r\n  text-align: center;\r\n  width: 100%;\r\n\r\n  tr {\r\n    border-bottom: 1px solid #212121;\r\n  }\r\n\r\n  td,\r\n  th {\r\n    padding-top: 8px;\r\n    padding-bottom: 8px;\r\n  }\r\n`;\r\n\r\n/*\r\n * COMPONENT\r\n */\r\nconst ExpensesTable = ({ items = [], onRemove }) =>\r\n  items.length > 0 && (\r\n    <Table>\r\n      <thead>\r\n        <tr>\r\n          <th>Expense name</th>\r\n          <th>Expense amount</th>\r\n          <th />\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {items.map(({ id, name, amount }) => (\r\n          <tr key={id}>\r\n            <td>{name}</td>\r\n            <td>{amount}</td>\r\n            <td>\r\n              <Button label=\"Delete\" onClick={() => onRemove(id)} />\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n\r\nExpensesTable.propTypes = {\r\n  items: T.arrayOf(\r\n    T.shape({\r\n      id: T.string,\r\n      name: T.string,\r\n      amount: T.number,\r\n    }),\r\n  ).isRequired,\r\n\r\n  onRemove: T.func.isRequired,\r\n};\r\n\r\n/*\r\n * CONNECT\r\n */\r\nconst mapStateToProps = state => ({\r\n  items: selectors.getExpenses(state),\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  onRemove: id => dispatch(AC.removeExpenseAC({ id })),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpensesTable);\r\n","/* import - node_modules */\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n/* import - CSS */\r\nimport '../App.css';\r\n/* import - COMPONENT */\r\nimport BudgetForm from './BudgetForm';\r\nimport Values from './Values';\r\nimport ExpenseForm from './ExpenseForm';\r\nimport ExpensesTable from './ExpensesTable';\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 340px 1fr;\r\n  align-items: flex-start;\r\n  grid-gap: 24px;\r\n  max-width: 960px;\r\n  padding-left: 16px;\r\n  padding-right: 16px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n\r\n/*\r\n * COMPONENT\r\n */\r\nconst App = () => (\r\n  <Container>\r\n    <BudgetForm />\r\n    <Values />\r\n    <ExpenseForm />\r\n    <ExpensesTable />\r\n  </Container>\r\n);\r\n\r\nexport default App;\r\n","/* import - node_modules */\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n/* import - CSS */\r\nimport './index.css';\r\n/* import - store */\r\nimport store from './redux/store';\r\n/* import - COMPONENT */\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}